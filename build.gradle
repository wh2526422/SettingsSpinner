plugins {
    id 'com.android.library'
}

android {
    namespace 'com.xbh.widget'
    compileSdk 33

    defaultConfig {
        minSdk 28
        versionName "1.1.0"
        versionCode 2
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        targetSdk 33
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

def _BASENAME = "SettingsSpinner";
def _VERSION = "_V1.0";
def _DestinationPath = "build/lib"; //生成jar包的位置
def zipFile = file('build/intermediates/compile_library_classes_jar/release/classes.jar'); //待打包文件位置

tasks.register('deleteBuild', Delete) {
    delete _DestinationPath + _BASENAME + _VERSION + ".jar"
}

tasks.register('makeJar', Jar) {
    from zipTree(zipFile)
    from file('build/intermediates/compile_symbol_list/release/R.txt')
    from fileTree(dir: 'src/main', includes: ['res/**']) //将assets目录打入jar包

    archiveBaseName = _BASENAME + _VERSION
    destinationDirectory = file(_DestinationPath)
}

makeJar.dependsOn(deleteBuild, build)